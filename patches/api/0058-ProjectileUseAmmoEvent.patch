From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: chickeneer <emcchickeneer@gmail.com>
Date: Sat, 2 Nov 2024 19:41:07 -0500
Subject: [PATCH] ProjectileUseAmmoEvent

Adds an event for modifying how much ammo should be used
This specifically targets modifying based on the ammo or location
context

diff --git a/src/main/java/com/empireminecraft/customevents/ProjectileUseAmmoEvent.java b/src/main/java/com/empireminecraft/customevents/ProjectileUseAmmoEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..b5ddb2d35a67fba256e0ce177c5e4f292558b703
--- /dev/null
+++ b/src/main/java/com/empireminecraft/customevents/ProjectileUseAmmoEvent.java
@@ -0,0 +1,60 @@
+/*
+ * Copyright (c) 2024. Starlis LLC / dba Empire Minecraft
+ *
+ * This source code is proprietary software and must not be redistributed without Starlis LLC's approval
+ */
+
+package com.empireminecraft.customevents;
+
+import org.bukkit.entity.Entity;
+import org.bukkit.entity.LivingEntity;
+import org.bukkit.entity.Player;
+import org.bukkit.event.Event;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.entity.EntityEvent;
+import org.bukkit.inventory.EquipmentSlot;
+import org.bukkit.inventory.ItemStack;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Nullable;
+
+public class ProjectileUseAmmoEvent extends EntityEvent {
+    private static final HandlerList handlers = new HandlerList();
+    private final ItemStack weapon;
+    private final ItemStack projectile;
+    private int ammoCount;
+
+    public ProjectileUseAmmoEvent(@NotNull ItemStack weapon, @NotNull ItemStack projectile, @NotNull Entity entity, int ammoCount) {
+        super(entity);
+        this.weapon = weapon;
+        this.projectile = projectile;
+        this.ammoCount = ammoCount;
+    }
+
+    @NotNull
+    public ItemStack getWeapon() {
+        return this.weapon;
+    }
+
+    @NotNull
+    public ItemStack getProjectile() {
+        return this.projectile;
+    }
+
+    public void setAmmoCount(int count) {
+        this.ammoCount = count;
+    }
+
+    public int getAmmoCount() {
+        return ammoCount;
+    }
+
+    @NotNull
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    @NotNull
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+}
