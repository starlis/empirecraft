From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Wed, 7 Aug 2013 19:39:41 -0400
Subject: [PATCH] Add dismount reason API for EntityDismountEvent


diff --git a/src/main/java/org/bukkit/event/entity/EntityDismountEvent.java b/src/main/java/org/bukkit/event/entity/EntityDismountEvent.java
index 91188d77ff350aef20c3bde2bd27a8096825f337..4d24a757ceb1692986d2d5a28eac41b4661837c8 100644
--- a/src/main/java/org/bukkit/event/entity/EntityDismountEvent.java
+++ b/src/main/java/org/bukkit/event/entity/EntityDismountEvent.java
@@ -9,7 +9,17 @@ import org.jetbrains.annotations.NotNull;
  * Called when an entity stops riding another entity.
  */
 public class EntityDismountEvent extends EntityEvent implements Cancellable {
+    // EMC start
+    public enum DismountReason {
+        PLAYER, WATER, DEAD, DEAD_VEHICLE, TELEPORT, SPECTATE, LEASH, TRANSFER, UNKNOWN, DISCONNECT, FORCE
+    }
+    public EntityDismountEvent.DismountReason reason;
 
+    @NotNull
+    public EntityDismountEvent.DismountReason getReason() {
+        return reason;
+    }
+    // EMC end
     private static final HandlerList handlers = new HandlerList();
     private boolean cancelled;
     private final Entity dismounted;
@@ -17,14 +27,15 @@ public class EntityDismountEvent extends EntityEvent implements Cancellable {
 
     public EntityDismountEvent(@NotNull Entity what, @NotNull Entity dismounted) {
         // Paper start
-        this(what, dismounted, true);
+        this(what, dismounted, true, EntityDismountEvent.DismountReason.UNKNOWN);
     }
 
-    public EntityDismountEvent(@NotNull Entity what, @NotNull Entity dismounted, boolean isCancellable) {
+    public EntityDismountEvent(@NotNull Entity what, @NotNull Entity dismounted, boolean isCancellable, @NotNull DismountReason reason) { // EMC
         // Paper end
         super(what);
         this.dismounted = dismounted;
         this.isCancellable = isCancellable; // Paper
+        this.reason = reason; // EMC
     }
 
     /**
