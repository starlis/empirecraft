From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: chickeneer <emcchickeneer@gmail.com>
Date: Tue, 29 Dec 2020 01:31:22 -0600
Subject: [PATCH] Add FakePlayer api for faking tablist users


diff --git a/src/main/java/com/empireminecraft/api/EAPI_Server.java b/src/main/java/com/empireminecraft/api/EAPI_Server.java
index 993d59488972d4eb6d6c241765f36a7ceef98856..22aacf67d25f5b11dd1ee95e69ad3d4834d8915b 100644
--- a/src/main/java/com/empireminecraft/api/EAPI_Server.java
+++ b/src/main/java/com/empireminecraft/api/EAPI_Server.java
@@ -23,6 +23,21 @@
 
 package com.empireminecraft.api;
 
+import com.destroystokyo.paper.profile.PlayerProfile;
+import net.kyori.adventure.text.Component;
+import org.bukkit.GameMode;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Nullable;
+
+import java.util.Set;
+import java.util.UUID;
+
 public interface EAPI_Server {
 
+    @Nullable
+    FakePlayer getFakePlayer(@NotNull UUID uuid);
+    @NotNull
+    FakePlayer createFakePlayer(@NotNull PlayerProfile profile, int ping, @NotNull GameMode gameMode, @NotNull Component playerListName) throws IllegalArgumentException;
+    @NotNull
+    Set<FakePlayer> getJoinedFakePlayers();
 }
diff --git a/src/main/java/com/empireminecraft/api/FakePlayer.java b/src/main/java/com/empireminecraft/api/FakePlayer.java
new file mode 100644
index 0000000000000000000000000000000000000000..884703d84c9c6dd62e6738376aa76d9c69c5aedc
--- /dev/null
+++ b/src/main/java/com/empireminecraft/api/FakePlayer.java
@@ -0,0 +1,48 @@
+package com.empireminecraft.api;
+
+import com.destroystokyo.paper.profile.PlayerProfile;
+import net.kyori.adventure.text.Component;
+import org.bukkit.GameMode;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Nullable;
+
+import java.util.UUID;
+
+public interface FakePlayer {
+
+    @NotNull
+    PlayerProfile getProfile();
+
+    @NotNull
+    Component getPlayerListName();
+
+    int getPing();
+
+    @NotNull
+    GameMode getGameMode();
+
+    @NotNull
+    UUID getUniqueId();
+
+    void join();
+    void quit();
+
+    default void setPing(int ping) {
+        setPing(ping, true);
+    }
+    void setPing(int ping, boolean update);
+
+    default void setGameMode(@NotNull GameMode gameMode) {
+        setGameMode(gameMode, true);
+    }
+    void setGameMode(@NotNull GameMode gameMode, boolean update);
+
+    default void setPlayerListName(@NotNull Component playerListName) {
+        setPlayerListName(playerListName, true);
+    }
+    void setPlayerListName(@NotNull Component playerListName, boolean update);
+
+    void update();
+
+    boolean isJoined();
+}
diff --git a/src/main/java/com/empireminecraft/customevents/FakePlayerEvent.java b/src/main/java/com/empireminecraft/customevents/FakePlayerEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..63771966577fa725105e1f966902acfa1c1cc4ac
--- /dev/null
+++ b/src/main/java/com/empireminecraft/customevents/FakePlayerEvent.java
@@ -0,0 +1,26 @@
+package com.empireminecraft.customevents;
+
+import com.empireminecraft.api.FakePlayer;
+import org.bukkit.event.Event;
+import org.jetbrains.annotations.NotNull;
+
+/**
+ * Represents a fakeplayer related event
+ */
+public abstract class FakePlayerEvent extends Event {
+    protected FakePlayer fakePlayer;
+
+    public FakePlayerEvent(@NotNull final FakePlayer who) {
+        fakePlayer = who;
+    }
+
+    /**
+     * Returns the fakeplayer involved in this event
+     *
+     * @return Player who is involved in this event
+     */
+    @NotNull
+    public final FakePlayer getFakePlayer() {
+        return fakePlayer;
+    }
+}
diff --git a/src/main/java/com/empireminecraft/customevents/FakePlayerJoinEvent.java b/src/main/java/com/empireminecraft/customevents/FakePlayerJoinEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..d5483977262295d425dad0e5454c12d1c3ae98a5
--- /dev/null
+++ b/src/main/java/com/empireminecraft/customevents/FakePlayerJoinEvent.java
@@ -0,0 +1,23 @@
+package com.empireminecraft.customevents;
+
+import com.empireminecraft.api.FakePlayer;
+import org.bukkit.event.HandlerList;
+import org.jetbrains.annotations.NotNull;
+
+public class FakePlayerJoinEvent extends FakePlayerEvent {
+    public FakePlayerJoinEvent(@NotNull FakePlayer who) {
+        super(who);
+    }
+
+    private static final HandlerList handlers = new HandlerList();
+
+    @NotNull
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    @NotNull
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+}
diff --git a/src/main/java/com/empireminecraft/customevents/FakePlayerQuitEvent.java b/src/main/java/com/empireminecraft/customevents/FakePlayerQuitEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..bfb8d04d55f80103ea797ee744a118257819ba46
--- /dev/null
+++ b/src/main/java/com/empireminecraft/customevents/FakePlayerQuitEvent.java
@@ -0,0 +1,23 @@
+package com.empireminecraft.customevents;
+
+import com.empireminecraft.api.FakePlayer;
+import org.bukkit.event.HandlerList;
+import org.jetbrains.annotations.NotNull;
+
+public class FakePlayerQuitEvent extends FakePlayerEvent {
+    public FakePlayerQuitEvent(@NotNull FakePlayer who) {
+        super(who);
+    }
+
+    private static final HandlerList handlers = new HandlerList();
+
+    @NotNull
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    @NotNull
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+}
diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java
index 8086acceacbceb2c5a7228fff005e41a86d37008..114dde147bfd222151ff5c4a6c64a757076521ce 100644
--- a/src/main/java/org/bukkit/entity/Player.java
+++ b/src/main/java/org/bukkit/entity/Player.java
@@ -7,8 +7,10 @@ import java.time.Instant;
 import java.util.Collection;
 import java.util.Date;
 import java.util.Map;
+import java.util.Set;
 import java.util.UUID;
 import java.util.concurrent.CompletableFuture;
+import com.empireminecraft.api.FakePlayer;
 import org.bukkit.BanEntry;
 import org.bukkit.DyeColor;
 import org.bukkit.Effect;
@@ -2059,7 +2061,39 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      *     player
      */
     public boolean canSee(@NotNull Player player);
-
+    // EMC start
+    /**
+     * Checks to see if a fake player has been hidden from this player
+     *
+     * @param fakePlayer FakePlayer to check
+     * @return True if the provided fakePlayer is not being hidden from this
+     *     player
+     */
+    boolean canSee(@NotNull FakePlayer fakePlayer);
+    /**
+     * Hides a fake player from this player
+     *
+     * @param plugin Plugin that wants to hide the fake player
+     * @param fakePlayer FakePlayer to hide
+     */
+    void hideFakePlayer(@NotNull Plugin plugin, @NotNull FakePlayer fakePlayer);
+    /**
+     * Allows this player to see a fake player that was previously hidden. If
+     * another plugin had hidden the fake player too, then the player will
+     * remain hidden until the other plugin calls this method too.
+     *
+     * @param plugin Plugin that wants to show the fake player
+     * @param fakePlayer FakePlayer to show
+     */
+    void showFakePlayer(@NotNull Plugin plugin, @NotNull FakePlayer fakePlayer);
+    /**
+     * Gets all fake players hidden with {@link #hideFakePlayer(Plugin, FakePlayer)}.
+     *
+     * @return a Set with all hidden fake players
+     */
+    @NotNull
+    Set<FakePlayer> getHiddenFakePlayers();
+    // EMC end
     /**
      * Visually hides an entity from this player.
      *
