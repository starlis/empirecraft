From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: chickeneer <emcchickeneer@gmail.com>
Date: Sun, 29 Dec 2024 00:21:11 -0600
Subject: [PATCH] Bring back deserialization support for legacy spawn eggs


diff --git a/src/main/java/org/bukkit/inventory/ItemStack.java b/src/main/java/org/bukkit/inventory/ItemStack.java
index cc82f4d52b73bba7303621dd8917d191b7065dff..466283025045294289e843ab627d6c55a26e742b 100644
--- a/src/main/java/org/bukkit/inventory/ItemStack.java
+++ b/src/main/java/org/bukkit/inventory/ItemStack.java
@@ -1,7 +1,8 @@
 package org.bukkit.inventory;
 
 import com.google.common.base.Preconditions;
-import com.google.common.collect.ImmutableMap;
+
+import java.util.HashMap;
 import java.util.LinkedHashMap;
 import java.util.Locale;
 import java.util.Map;
@@ -14,6 +15,7 @@ import org.bukkit.UndefinedNullability;
 import org.bukkit.Utility;
 import org.bukkit.configuration.serialization.ConfigurationSerializable;
 import org.bukkit.enchantments.Enchantment;
+import org.bukkit.entity.EntityType;
 import org.bukkit.inventory.meta.Damageable;
 import org.bukkit.inventory.meta.ItemMeta;
 import org.bukkit.material.MaterialData;
@@ -521,6 +523,20 @@ public class ItemStack implements Cloneable, ConfigurationSerializable, Translat
             if (dataVal != 0) {
                 damage = 0;
             }
+            // EMC start - try to recover very specific types of spawn eggs
+            if (args.containsKey("meta")) {
+                Object raw = args.get("meta");
+                if (raw instanceof org.bukkit.inventory.meta.SpawnEggMeta spawnEggMeta) {
+                    org.bukkit.entity.EntityType entityType = spawnEggMeta.getSpawnedType();
+                    if (entityType != null) {
+                        Material matType = ENTITY_TYPE_TO_MATERIAL.get(entityType);
+                        if (matType != null) {
+                            type = matType;
+                        }
+                    }
+                }
+            }
+            // EMC end
         } else {
             type = Bukkit.getUnsafe().getMaterial((String) args.get("type"), version);
         }
@@ -560,6 +576,7 @@ public class ItemStack implements Cloneable, ConfigurationSerializable, Translat
                     }
                 }
                 // Paper end
+
                 result.setItemMeta((ItemMeta) raw);
             }
         }
@@ -708,6 +725,60 @@ public class ItemStack implements Cloneable, ConfigurationSerializable, Translat
         return sb.toString();
     }
     // EMC end
+    // EMC start
+    private static final Map<EntityType, Material> ENTITY_TYPE_TO_MATERIAL = new HashMap<>();
+    static {
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.BAT, Material.BAT_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.BLAZE, Material.BLAZE_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.CAVE_SPIDER, Material.CAVE_SPIDER_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.CHICKEN, Material.CHICKEN_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.COW, Material.COW_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.CREEPER, Material.CREEPER_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.DONKEY, Material.DONKEY_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.ELDER_GUARDIAN, Material.ELDER_GUARDIAN_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.ENDERMAN, Material.ENDERMAN_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.ENDERMITE, Material.ENDERMITE_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.EVOKER, Material.EVOKER_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.GHAST, Material.GHAST_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.GUARDIAN, Material.GUARDIAN_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.ENDER_DRAGON, Material.ENDER_DRAGON_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.HORSE, Material.HORSE_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.HUSK, Material.HUSK_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.IRON_GOLEM, Material.IRON_GOLEM_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.LLAMA, Material.LLAMA_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.MAGMA_CUBE, Material.MAGMA_CUBE_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.MOOSHROOM, Material.MOOSHROOM_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.MULE, Material.MULE_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.OCELOT, Material.OCELOT_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.PUFFERFISH, Material.PUFFERFISH_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.PARROT, Material.PARROT_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.PIG, Material.PIG_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.POLAR_BEAR, Material.POLAR_BEAR_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.RABBIT, Material.RABBIT_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.SHEEP, Material.SHEEP_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.SHULKER, Material.SHULKER_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.SILVERFISH, Material.SILVERFISH_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.SKELETON, Material.SKELETON_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.SKELETON_HORSE, Material.SKELETON_HORSE_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.SLIME, Material.SLIME_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.SNOW_GOLEM, Material.SNOW_GOLEM_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.SPIDER, Material.SPIDER_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.SQUID, Material.SQUID_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.STRAY, Material.STRAY_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.TURTLE, Material.TURTLE_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.VEX, Material.VEX_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.VILLAGER, Material.VILLAGER_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.VINDICATOR, Material.VINDICATOR_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.WITCH, Material.WITCH_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.WITHER, Material.WITHER_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.WITHER_SKELETON, Material.WITHER_SKELETON_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.WOLF, Material.WOLF_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.ZOMBIE, Material.ZOMBIE_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.ZOMBIE_HORSE, Material.ZOMBIE_HORSE_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.ZOMBIFIED_PIGLIN, Material.ZOMBIFIED_PIGLIN_SPAWN_EGG);
+        ENTITY_TYPE_TO_MATERIAL.put(EntityType.ZOMBIE_VILLAGER, Material.ZOMBIE_VILLAGER_SPAWN_EGG);
+    }
+    // EMC end
 
     // Paper start
     /**
diff --git a/src/main/java/org/bukkit/inventory/meta/SpawnEggMeta.java b/src/main/java/org/bukkit/inventory/meta/SpawnEggMeta.java
index 35deb3519f46047009b529d6a80517e25e6cf20a..f17269743153a04cf50a5c03e9a65df94ecfde7d 100644
--- a/src/main/java/org/bukkit/inventory/meta/SpawnEggMeta.java
+++ b/src/main/java/org/bukkit/inventory/meta/SpawnEggMeta.java
@@ -18,7 +18,7 @@ public interface SpawnEggMeta extends ItemMeta {
      * @deprecated different types are different items
      */
     @Deprecated(forRemoval = true) // Paper
-    @Contract("-> fail")
+    @Nullable//@Contract("-> fail") // EMC
     EntityType getSpawnedType();
 
     /**
