From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Wed, 7 Aug 2013 19:52:14 -0400
Subject: [PATCH] EntityDismountEvent Dismount Reason API


diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index 687c935ca5dfb7cb4a8c18f493e453402ab095d6..b5922ebb54e0e783398cce35720345c4ac840815 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -172,6 +172,7 @@ import net.minecraft.world.phys.shapes.BooleanOp;
 import net.minecraft.world.phys.shapes.Shapes;
 import net.minecraft.world.phys.shapes.VoxelShape;
 import net.minecraft.world.ticks.LevelTicks;
+import org.bukkit.event.entity.EntityDismountEvent;
 import org.slf4j.Logger;
 import org.bukkit.Bukkit;
 import org.bukkit.WeatherType;
@@ -730,6 +731,7 @@ public class ServerLevel extends Level implements WorldGenLevel, ca.spottedleaf.
                                 if (!entity1.isRemoved() && entity1.hasPassenger(entity)) {
                                     return;
                                 }
+                                if (entity1.isRemoved()) { entity.dismountReason =  EntityDismountEvent.DismountReason.DEAD_VEHICLE; } // EMC
 
                                 entity.stopRiding();
                             }
@@ -1309,6 +1311,7 @@ public class ServerLevel extends Level implements WorldGenLevel, ca.spottedleaf.
             } finally { timer.stopTiming(); }// Paper - EAR2 timings
             }
         } else {
+            if (passenger.isRemoved()) { passenger.dismountReason = EntityDismountEvent.DismountReason.DEAD; } // EMC
             passenger.stopRiding();
         }
     }
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index c396580a9cfd86ff261bed439bb4662ae88010b5..341ea0969347b56d383bf3a1a811bdc94296f951 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -161,6 +161,7 @@ import net.minecraft.world.phys.Vec3;
 import net.minecraft.world.scores.PlayerTeam;
 import net.minecraft.world.scores.ScoreAccess;
 import net.minecraft.world.scores.ScoreHolder;
+import org.bukkit.event.entity.EntityDismountEvent;
 import org.slf4j.Logger;
 import net.minecraft.world.Container;
 import net.minecraft.world.InteractionHand;
@@ -1984,10 +1985,11 @@ public class ServerPlayer extends net.minecraft.world.entity.player.Player imple
 
     public void disconnect() {
         this.disconnected = true;
-        this.ejectPassengers();
+        this.ejectPassengers(EntityDismountEvent.DismountReason.DISCONNECT);
 
         // Paper start - Workaround vehicle not tracking the passenger disconnection dismount
         if (this.isPassenger() && this.getVehicle() instanceof ServerPlayer) {
+            this.dismountReason = EntityDismountEvent.DismountReason.DISCONNECT; // EMC
             this.stopRiding();
         }
         // Paper end - Workaround vehicle not tracking the passenger disconnection dismount
@@ -2132,6 +2134,7 @@ public class ServerPlayer extends net.minecraft.world.entity.player.Player imple
         ChunkPos chunkcoordintpair = new ChunkPos(BlockPos.containing(d0, d1, d2));
 
         worldserver.getChunkSource().addRegionTicket(TicketType.POST_TELEPORT, chunkcoordintpair, 1, this.getId());
+        this.dismountReason = EntityDismountEvent.DismountReason.TELEPORT; // EMC
         this.stopRiding();
         if (this.isSleeping()) {
             this.stopSleepInBed(true, true);
@@ -2192,6 +2195,7 @@ public class ServerPlayer extends net.minecraft.world.entity.player.Player imple
             this.connection.send(new ClientboundGameEventPacket(ClientboundGameEventPacket.CHANGE_GAME_MODE, (float) gameMode.getId()));
             if (gameMode == GameType.SPECTATOR) {
                 this.removeEntitiesOnShoulder();
+                this.dismountReason = EntityDismountEvent.DismountReason.SPECTATE; // EMC
                 this.stopRiding();
                 EnchantmentHelper.stopLocationBasedEffects(this);
             } else {
@@ -2457,6 +2461,7 @@ public class ServerPlayer extends net.minecraft.world.entity.player.Player imple
     public void teleportTo(ServerLevel worldserver, double d0, double d1, double d2, float f, float f1, org.bukkit.event.player.PlayerTeleportEvent.TeleportCause cause) {
         // CraftBukkit end
         this.setCamera(this);
+        this.dismountReason = EntityDismountEvent.DismountReason.TELEPORT; // EMC
         this.stopRiding();
         /* CraftBukkit start - replace with bukkit handling for multi-world
         if (worldserver == this.level()) {
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index c13922d2fb1c15f895b14d4cb6d5379b59ea1ef8..987eccdf60da0f2ba6b5fe7c6aabcef04eb09afc 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -102,6 +102,7 @@ import net.minecraft.world.phys.Vec3;
 import net.minecraft.world.scores.DisplaySlot;
 import net.minecraft.world.scores.Objective;
 import net.minecraft.world.scores.PlayerTeam;
+import org.bukkit.event.entity.EntityDismountEvent;
 import org.slf4j.Logger;
 
 // CraftBukkit start
@@ -632,6 +633,7 @@ public abstract class PlayerList {
 
             if (entity.hasExactlyOnePlayerPassenger()) {
                 PlayerList.LOGGER.debug("Removing player mount");
+                entityplayer.dismountReason = EntityDismountEvent.DismountReason.DISCONNECT; // EMC
                 entityplayer.stopRiding();
                 entity.getPassengersAndSelf().forEach((entity1) -> {
                     // Paper start - Fix villager boat exploit
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index bf6621e88f52866833fec0e9e8771301f22b3a84..a82e08b0ca4f9b36810b12c20d73b48790fcfc4e 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -869,6 +869,7 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
         if (firstTick && this instanceof net.minecraft.world.entity.NeutralMob neutralMob) neutralMob.tickInitialPersistentAnger(level); // Paper - Prevent entity loading causing async lookups
         this.inBlockState = null;
         if (this.isPassenger() && this.getVehicle().isRemoved()) {
+            this.dismountReason = EntityDismountEvent.DismountReason.DEAD_VEHICLE; // EMC
             this.stopRiding();
         }
 
@@ -3061,6 +3062,7 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
                 }
                 // CraftBukkit end
                 if (this.isPassenger()) {
+                    this.dismountReason = EntityDismountEvent.DismountReason.TRANSFER; // EMC
                     this.stopRiding();
                 }
 
@@ -3082,7 +3084,11 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
     }
 
     public void ejectPassengers() {
+        ejectPassengers(EntityDismountEvent.DismountReason.UNKNOWN);
+    }
+    public void ejectPassengers(EntityDismountEvent.DismountReason reason) {
         for (int i = this.passengers.size() - 1; i >= 0; --i) {
+            this.passengers.get(i).dismountReason = reason; // EMC
             ((Entity) this.passengers.get(i)).stopRiding();
         }
 
@@ -3139,6 +3145,8 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
     protected boolean removePassenger(Entity entity) { return removePassenger(entity, false);}
     protected boolean removePassenger(Entity entity, boolean suppressCancellation) { // CraftBukkit
         // Paper end - Force entity dismount during teleportation
+        EntityDismountEvent.DismountReason dismountReason = entity.dismountReason; // EMC
+        entity.dismountReason = EntityDismountEvent.DismountReason.UNKNOWN; // EMC
         if (entity.getVehicle() == this) {
             throw new IllegalStateException("Use x.stopRiding(y), not y.removePassenger(x)");
         } else {
@@ -3161,7 +3169,7 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
                 }
             }
 
-            EntityDismountEvent event = new EntityDismountEvent(entity.getBukkitEntity(), this.getBukkitEntity(), !suppressCancellation); // Paper - Force entity dismount during teleportation
+            EntityDismountEvent event = new EntityDismountEvent(entity.getBukkitEntity(), this.getBukkitEntity(), !suppressCancellation, dismountReason); // Paper - Force entity dismount during teleportation // EMC
             // Suppress during worldgen
             if (this.valid) {
                 Bukkit.getPluginManager().callEvent(event);
@@ -3685,6 +3693,7 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
         return this.removalReason != null ? String.format(Locale.ROOT, "%s['%s'/%d, uuid='%s', l='%s', x=%.2f, y=%.2f, z=%.2f, cpos=%s, tl=%d, v=%b, removed=%s]", this.getClass().getSimpleName(), this.getName().getString(), this.id, this.uuid, s, this.getX(), this.getY(), this.getZ(), this.chunkPosition(), this.tickCount, this.valid, this.removalReason) : String.format(Locale.ROOT, "%s['%s'/%d, uuid='%s', l='%s', x=%.2f, y=%.2f, z=%.2f, cpos=%s, tl=%d, v=%b]", this.getClass().getSimpleName(), this.getName().getString(), this.id, this.uuid, s, this.getX(), this.getY(), this.getZ(), this.chunkPosition(), this.tickCount, this.valid); // Paper - add more info
     }
 
+    public EntityDismountEvent.DismountReason dismountReason = EntityDismountEvent.DismountReason.UNKNOWN; // EMC
     public boolean isInvulnerableTo(DamageSource damageSource) {
         return this.isRemoved() || this.invulnerable && !damageSource.is(DamageTypeTags.BYPASSES_INVULNERABILITY) && !damageSource.isCreativePlayer() || damageSource.is(DamageTypeTags.IS_FIRE) && this.fireImmune() || damageSource.is(DamageTypeTags.IS_FALL) && this.getType().is(EntityTypeTags.FALL_DAMAGE_IMMUNE);
     }
@@ -4841,10 +4850,18 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
         }
 
         if (this.removalReason.shouldDestroy()) {
+            this.dismountReason = EntityDismountEvent.DismountReason.DEAD; // EMC
             this.stopRiding();
         }
 
-        if (this.removalReason != Entity.RemovalReason.UNLOADED_TO_CHUNK) { this.getPassengers().forEach(Entity::stopRiding); } // Paper - rewrite chunk system
+        // EMC start
+        if (entity_removalreason != RemovalReason.UNLOADED_TO_CHUNK) {
+            this.getPassengers().forEach(entity -> {
+                entity.dismountReason = EntityDismountEvent.DismountReason.DEAD_VEHICLE; // EMC - Add this
+                entity.stopRiding();
+            }); // Paper - chunk system - don't adjust passenger state when unloading, it's just not safe (and messes with our logic in entity chunk unload)
+        }
+        // EMC end
         this.levelCallback.onRemove(entity_removalreason);
         // Paper start - Folia schedulers
         if (!(this instanceof ServerPlayer) && entity_removalreason != RemovalReason.CHANGED_DIMENSION && !alreadyRemoved) {
diff --git a/src/main/java/net/minecraft/world/entity/Leashable.java b/src/main/java/net/minecraft/world/entity/Leashable.java
index e7535f15be3cc1537aafee53779ccfb4f21d1f38..7a14fdaad763474330cd885cc471d3d9076d0832 100644
--- a/src/main/java/net/minecraft/world/entity/Leashable.java
+++ b/src/main/java/net/minecraft/world/entity/Leashable.java
@@ -15,6 +15,7 @@ import net.minecraft.world.item.Items;
 import net.minecraft.world.level.ItemLike;
 import net.minecraft.world.level.Level;
 // CraftBukkit start
+import org.bukkit.event.entity.EntityDismountEvent;
 import org.bukkit.event.entity.EntityUnleashEvent;
 import org.bukkit.event.entity.EntityUnleashEvent.UnleashReason;
 // CraftBukkit end
@@ -252,6 +253,7 @@ public interface Leashable {
         }
 
         if (entity.isPassenger()) {
+            entity.dismountReason = EntityDismountEvent.DismountReason.LEASH; // EMC
             entity.stopRiding();
         }
 
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index 3e4f702ba5d42cd537ad526527fd89dd12684424..4e63f9ef452b4d881360c345f554c03e5c401b22 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -132,6 +132,7 @@ import net.minecraft.world.phys.HitResult;
 import net.minecraft.world.phys.Vec3;
 import net.minecraft.world.scores.PlayerTeam;
 import net.minecraft.world.scores.Scoreboard;
+import org.bukkit.event.entity.EntityDismountEvent;
 import org.slf4j.Logger;
 
 // CraftBukkit start
@@ -486,6 +487,7 @@ public abstract class LivingEntity extends Entity implements Attackable {
                 }
 
                 if (!this.level().isClientSide && this.isPassenger() && this.getVehicle() != null && this.getVehicle().dismountsUnderwater()) {
+                    this.dismountReason = EntityDismountEvent.DismountReason.WATER; // EMC
                     this.stopRiding();
                 }
             } else if (this.getAirSupply() < this.getMaxAirSupply()) {
@@ -4404,6 +4406,7 @@ public abstract class LivingEntity extends Entity implements Attackable {
 
     public void startSleeping(BlockPos pos) {
         if (this.isPassenger()) {
+            if (this instanceof net.minecraft.world.entity.player.Player) this.dismountReason = EntityDismountEvent.DismountReason.PLAYER; // EMC
             this.stopRiding();
         }
 
diff --git a/src/main/java/net/minecraft/world/entity/Mob.java b/src/main/java/net/minecraft/world/entity/Mob.java
index 7bf359cbf08ca91480c74843e6b78c95e2a11f72..eac8cf94d939a3961f5abbb2b75b61143797a7ab 100644
--- a/src/main/java/net/minecraft/world/entity/Mob.java
+++ b/src/main/java/net/minecraft/world/entity/Mob.java
@@ -88,13 +88,7 @@ import net.minecraft.world.level.storage.loot.parameters.LootContextParams;
 import net.minecraft.world.phys.AABB;
 import org.bukkit.craftbukkit.event.CraftEventFactory;
 import org.bukkit.craftbukkit.entity.CraftLivingEntity;
-import org.bukkit.event.entity.CreatureSpawnEvent;
-import org.bukkit.event.entity.EntityCombustByEntityEvent;
-import org.bukkit.event.entity.EntityRemoveEvent;
-import org.bukkit.event.entity.EntityTargetLivingEntityEvent;
-import org.bukkit.event.entity.EntityTargetEvent;
-import org.bukkit.event.entity.EntityTransformEvent;
-import org.bukkit.event.entity.EntityUnleashEvent;
+import org.bukkit.event.entity.*;
 import org.bukkit.event.entity.EntityUnleashEvent.UnleashReason;
 // CraftBukkit end
 
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index 09bcbc0ae36e4e69fee87a7e0c49acf496117a39..215941748750174ad0671127976df5a138c99e5b 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -113,6 +113,7 @@ import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.Vec3;
 import net.minecraft.world.scores.PlayerTeam;
 import net.minecraft.world.scores.Scoreboard;
+import org.bukkit.event.entity.EntityDismountEvent;
 import org.slf4j.Logger;
 import org.bukkit.craftbukkit.entity.CraftHumanEntity;
 import org.bukkit.craftbukkit.event.CraftEventFactory;
@@ -526,6 +527,7 @@ public abstract class Player extends LivingEntity {
     @Override
     public void rideTick() {
         if (!this.level().isClientSide && this.wantsToStopRiding() && this.isPassenger()) {
+            this.dismountReason = EntityDismountEvent.DismountReason.PLAYER; // EMC
             this.stopRiding();
             // CraftBukkit start - SPIGOT-7316: no longer passenger, dismount and return
             if (!this.isPassenger()) {
diff --git a/src/main/java/net/minecraft/world/item/ChorusFruitItem.java b/src/main/java/net/minecraft/world/item/ChorusFruitItem.java
index 9f59f63203807abc3802d3e2f060d90d0d754860..219eaf8974ae5c466a6a1225599e174adb37356b 100644
--- a/src/main/java/net/minecraft/world/item/ChorusFruitItem.java
+++ b/src/main/java/net/minecraft/world/item/ChorusFruitItem.java
@@ -13,6 +13,7 @@ import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.gameevent.GameEvent;
 import net.minecraft.world.phys.Vec3;
+import org.bukkit.event.entity.EntityDismountEvent;
 
 public class ChorusFruitItem extends Item {
 
@@ -31,6 +32,7 @@ public class ChorusFruitItem extends Item {
                 double d2 = user.getZ() + (user.getRandom().nextDouble() - 0.5D) * 16.0D;
 
                 if (user.isPassenger()) {
+                    user.dismountReason = EntityDismountEvent.DismountReason.TELEPORT; // EMC
                     user.stopRiding();
                 }
 
