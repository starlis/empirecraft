From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Mon, 9 Dec 2013 23:21:21 -0500
Subject: [PATCH] Improved BungeeCord support

Secure BungeeCord with IP Whitelist for IP/UUID forwarding
Allow online-mode to be set to true, and skip online-mode for bungee IP's

diff --git a/src/main/java/net/minecraft/network/Connection.java b/src/main/java/net/minecraft/network/Connection.java
index 3e550f8e7cd4f4e16f499a8a2a4b95420270f07a..a8c534e1f9e6f6109dfc0e3f5cfe87cc47c2d69f 100644
--- a/src/main/java/net/minecraft/network/Connection.java
+++ b/src/main/java/net/minecraft/network/Connection.java
@@ -103,6 +103,7 @@ public class Connection extends SimpleChannelInboundHandler<Packet<?>> {
     // Spigot End
     @Nullable
     private volatile PacketListener disconnectListener;
+    public boolean isProxied = false; // EMC
     @Nullable
     private volatile PacketListener packetListener;
     @Nullable
diff --git a/src/main/java/net/minecraft/server/network/ServerHandshakePacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerHandshakePacketListenerImpl.java
index ddf42645402afefc0f5caebc684b191eef9d6ec2..46f67701fc86853ea6efd8a9430fe5625d0019e6 100644
--- a/src/main/java/net/minecraft/server/network/ServerHandshakePacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerHandshakePacketListenerImpl.java
@@ -131,7 +131,8 @@ public class ServerHandshakePacketListenerImpl implements ServerHandshakePacketL
         } else {
             this.connection.setupInboundProtocol(LoginProtocols.SERVERBOUND, new ServerLoginPacketListenerImpl(this.server, this.connection, transfer));
             // Paper start - PlayerHandshakeEvent
-            boolean proxyLogicEnabled = org.spigotmc.SpigotConfig.bungee;
+            String ip = ((java.net.InetSocketAddress) this.connection.getRemoteAddress()).getAddress().getHostAddress(); // EMC
+            boolean proxyLogicEnabled = org.spigotmc.SpigotConfig.bungee && org.spigotmc.SpigotConfig.bungeeAddresses.contains(ip); // EMC - add bungeeAddresses check
             boolean handledByEvent = false;
             // Try and handle the handshake through the event
             if (com.destroystokyo.paper.event.player.PlayerHandshakeEvent.getHandlerList().getRegisteredListeners().length != 0) { // Hello? Can you hear me?
@@ -167,6 +168,7 @@ public class ServerHandshakePacketListenerImpl implements ServerHandshakePacketL
             String[] split = packet.hostName().split("\00");
             if (!handledByEvent && proxyLogicEnabled) { // Paper
                 // if (org.spigotmc.SpigotConfig.bungee) { // Paper - comment out, we check above!
+                connection.isProxied = true; // EMC
                 if ( ( split.length == 3 || split.length == 4 ) && ( ServerHandshakePacketListenerImpl.BYPASS_HOSTCHECK || ServerHandshakePacketListenerImpl.HOST_PATTERN.matcher( split[1] ).matches() ) ) { // Paper - Add bypass host check
                     // Paper start - Unix domain socket support
                     java.net.SocketAddress socketAddress = this.connection.getRemoteAddress();
@@ -174,7 +176,7 @@ public class ServerHandshakePacketListenerImpl implements ServerHandshakePacketL
                     this.connection.address = new java.net.InetSocketAddress(split[1], socketAddress instanceof java.net.InetSocketAddress ? ((java.net.InetSocketAddress) socketAddress).getPort() : 0);
                     // Paper end - Unix domain socket support
                     this.connection.spoofedUUID = com.mojang.util.UndashedUuid.fromStringLenient( split[2] );
-                } else
+                } else if (false) // EMC
                 {
                     Component chatmessage = Component.literal("If you wish to use IP forwarding, please enable it in your BungeeCord config as well!");
                     this.connection.send(new ClientboundLoginDisconnectPacket(chatmessage));
diff --git a/src/main/java/net/minecraft/server/network/ServerLoginPacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerLoginPacketListenerImpl.java
index 40638b439966619e9c70a18a32abd95b2178fe9f..24e2609c813450bd52720c0fad337a2f0dc7d51d 100644
--- a/src/main/java/net/minecraft/server/network/ServerLoginPacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerLoginPacketListenerImpl.java
@@ -186,7 +186,7 @@ public class ServerLoginPacketListenerImpl implements ServerLoginPacketListener,
         if (gameprofile != null && this.requestedUsername.equalsIgnoreCase(gameprofile.getName())) {
             this.startClientVerification(gameprofile);
         } else {
-            if (this.server.usesAuthentication() && !this.connection.isMemoryConnection()) {
+            if (!this.connection.isProxied && this.server.usesAuthentication() && !this.connection.isMemoryConnection()) { // EMC - add !isProxied
                 this.state = ServerLoginPacketListenerImpl.State.KEY;
                 this.connection.send(new ClientboundHelloPacket("", this.server.getKeyPair().getPublic().getEncoded(), this.challenge, true));
             } else {
diff --git a/src/main/java/org/spigotmc/SpigotConfig.java b/src/main/java/org/spigotmc/SpigotConfig.java
index 4dbb109d0526afee99b9190fc256585121aac9b5..f0deddf9cee3335d87c870215ac150a9b03e6998 100644
--- a/src/main/java/org/spigotmc/SpigotConfig.java
+++ b/src/main/java/org/spigotmc/SpigotConfig.java
@@ -229,6 +229,7 @@ public class SpigotConfig
     }
 
     public static boolean bungee;
+    public static List<String> bungeeAddresses = java.util.Collections.singletonList("127.0.0.1"); // EMC
     private static void bungee() {
         if ( SpigotConfig.version < 4 )
         {
@@ -236,6 +237,7 @@ public class SpigotConfig
             System.out.println( "Outdated config, disabling BungeeCord support!" );
         }
         SpigotConfig.bungee = SpigotConfig.getBoolean( "settings.bungeecord", false );
+        bungeeAddresses = getList("settings.bungeecord-addresses", bungeeAddresses); // EMC
     }
 
     private static void nettyThreads()
