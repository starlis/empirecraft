From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Mon, 4 Mar 2013 23:35:02 -0500
Subject: [PATCH] Temporary Meta API


diff --git a/src/main/java/org/bukkit/craftbukkit/CraftChunk.java b/src/main/java/org/bukkit/craftbukkit/CraftChunk.java
index 400e632208d133a3f49fc7f14bceb48a1026769b..b777fd698ea3f8574cbdae0a24dc3900256c06f7 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftChunk.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftChunk.java
@@ -92,6 +92,11 @@ public class CraftChunk implements Chunk {
 
         return chunkAccess;
     }
+    // EMC start - Temporary Meta API
+    public java.util.@org.jspecify.annotations.NonNull Map<org.bukkit.NamespacedKey, Object> getTemporaryMeta() {
+        return getHandle(ChunkStatus.FULL).tempMeta;
+    }
+    // EMC end - Temporary Meta API
 
     @Override
     public int getX() {
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
index 161b4d429cfac3e76cff638c136c1341a1291ae5..bd8bdb08ecabc07cdb443df9c608daa716e4760c 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
@@ -288,6 +288,11 @@ public class CraftWorld extends CraftRegionAccessor implements World {
         ).isValid();
     }
     // Paper end
+    // EMC start - Temporary Meta API
+    public java.util.@org.jspecify.annotations.NonNull Map<NamespacedKey, Object> getTemporaryMeta() {
+        return getHandle().serverLevelData.tempMeta;
+    }
+    // EMC end - Temporary Meta API
 
     private static final Random rand = new Random();
 
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
index a41f481a1ee5bbca7dbb3fce29f55fbf7028ec77..53e1969cf8d34e881b9ce7d74c3a74c629dc4398 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
@@ -225,6 +225,11 @@ public abstract class CraftEntity implements org.bukkit.entity.Entity {
 
         return false;
     }
+    // EMC start
+    public java.util.@org.jspecify.annotations.NonNull Map<org.bukkit.NamespacedKey, Object> getTemporaryMeta() {
+        return getHandle().tempMeta;
+    }
+    // EMC end
 
     @Override
     public double getHeight() {
diff --git a/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java b/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java
index c5daefa56597bd13fe227fa014ca5225c00a2a2d..6cf256c9a413c71208a229842a5eb8d67b2224d9 100644
--- a/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java
+++ b/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java
@@ -1464,6 +1464,11 @@ public class CraftEventFactory {
         InventoryCloseEvent event = new InventoryCloseEvent(human.containerMenu.getBukkitView(), reason); // Paper
         human.level().getCraftServer().getPluginManager().callEvent(event);
         human.containerMenu.transferTo(human.inventoryMenu, human.getBukkitEntity());
+        // EMC start - Temporary Meta API
+        if (event.getInventory().getViewers().isEmpty()) {
+            org.bukkit.craftbukkit.inventory.CraftInventory.meta.remove(((org.bukkit.craftbukkit.inventory.CraftInventory) event.getInventory()).getInventory());
+        }
+        // EMC end - Temporary Meta API
     }
 
     public static ItemStack handleEditBookEvent(ServerPlayer player, int itemInHandIndex, ItemStack itemInHand, ItemStack newBookItem) {
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftInventory.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftInventory.java
index f850e6cea92edc87ed54cf54488b5ebb606913ed..8920c060fd1c146c761d0ad4f09e4c496264db87 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftInventory.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftInventory.java
@@ -447,6 +447,12 @@ public class CraftInventory implements Inventory {
         return count;
     }
     // Paper end
+    // EMC start - Temporary Meta API
+    public static final java.util.WeakHashMap<Container, java.util.Map<org.bukkit.NamespacedKey, Object>> meta = new java.util.WeakHashMap<>(64);
+    public @org.jetbrains.annotations.NotNull java.util.Map<org.bukkit.NamespacedKey, Object> getTemporaryMeta() {
+        return meta.computeIfAbsent(inventory, k -> new HashMap<>());
+    }
+    // EMC end - Temporary Meta API
 
     @Override
     public ListIterator<ItemStack> iterator() {
