--- a/paper-server/build.gradle.kts
+++ b/paper-server/build.gradle.kts
@@ -5,6 +_,7 @@
 import paper.libs.com.google.gson.annotations.SerializedName
 import java.time.Instant
 import kotlin.io.path.readText
+import kotlin.io.path.writeText
 
 plugins {
     `java-library`
@@ -26,6 +_,17 @@
     minecraftVersion = providers.gradleProperty("mcVersion")
     gitFilePatches = false
 
+    // EMC start - Rebrand
+    val empirecraft = forks.register("empirecraft") {
+        upstream.patchDir("paperServer") {
+            upstreamPath = "paper-server"
+            excludes = setOf("src/minecraft", "patches", "build.gradle.kts")
+            patchesDir = rootDirectory.dir("empirecraft-server/paper-patches")
+            outputDir = rootDirectory.dir("paper-server")
+        }
+    }
+    activeFork = empirecraft
+    // EMC end - Rebrand
     spigot {
         enabled = true
         buildDataRef = "281ac0de7a76d808753ede97d11b034bc801b63d"
@@ -107,7 +_,21 @@
     }
 }
 
-val log4jPlugins = sourceSets.create("log4jPlugins")
+// EMC start - Rebrand
+sourceSets {
+    main {
+        java { srcDir("../paper-server/src/main/java") }
+        resources { srcDir("../paper-server/src/main/resources") }
+    }
+    test {
+        java { srcDir("../paper-server/src/test/java") }
+        resources { srcDir("../paper-server/src/test/resources") }
+    }
+}
+val log4jPlugins = sourceSets.create("log4jPlugins") {
+    java { srcDir("../paper-server/src/log4jPlugins/java") }
+}
+// EMC end - Rebrand
 configurations.named(log4jPlugins.compileClasspathConfigurationName) {
     extendsFrom(configurations.compileClasspath.get())
 }
@@ -129,7 +_,7 @@
 }
 
 dependencies {
-    implementation(project(":paper-api"))
+    implementation(project(":empirecraft-api")) // EMC
     implementation("ca.spottedleaf:concurrentutil:0.0.3")
     implementation("org.jline:jline-terminal-ffm:3.27.1") // use ffm on java 22+
     implementation("org.jline:jline-terminal-jni:3.27.1") // fall back to jni on java 21
@@ -205,14 +_,14 @@
         val gitBranch = git.exec(providers, "rev-parse", "--abbrev-ref", "HEAD").get().trim()
         attributes(
             "Main-Class" to "org.bukkit.craftbukkit.Main",
-            "Implementation-Title" to "Paper",
+            "Implementation-Title" to "EmpireCraft", // EMC
             "Implementation-Version" to implementationVersion,
             "Implementation-Vendor" to date,
-            "Specification-Title" to "Paper",
+            "Specification-Title" to "EmpireCraft", // EMC
             "Specification-Version" to project.version,
-            "Specification-Vendor" to "Paper Team",
-            "Brand-Id" to "papermc:paper",
-            "Brand-Name" to "Paper",
+            "Specification-Vendor" to "EMC Team", // EMC
+            "Brand-Id" to "empireminecraft:empirecraft", // EMC
+            "Brand-Name" to "EmpireCraft", // EMC
             "Build-Number" to (build ?: ""),
             "Build-Time" to buildTime.toString(),
             "Git-Branch" to gitBranch,
@@ -271,7 +_,7 @@
     jvmArgumentProviders.add(provider)
 }
 
-val generatedDir: java.nio.file.Path = layout.projectDirectory.dir("src/generated/java").asFile.toPath()
+val generatedDir: java.nio.file.Path = layout.projectDirectory.dir("../paper-server/src/generated/java").asFile.toPath() // EMC
 idea {
     module {
         generatedSourceDirs.add(generatedDir.toFile())
