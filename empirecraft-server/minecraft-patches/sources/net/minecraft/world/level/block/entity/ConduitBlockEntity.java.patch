--- a/net/minecraft/world/level/block/entity/ConduitBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/ConduitBlockEntity.java
@@ -202,10 +_,11 @@
         EntityReference<LivingEntity> entityReference = updateDestroyTarget(blockEntity.destroyTarget, level, pos, canDestroy);
         LivingEntity livingEntity = EntityReference.get(entityReference, level, LivingEntity.class);
         if (damageTarget && livingEntity != null) { // CraftBukkit
-            if (livingEntity.hurtServer(level, level.damageSources().magic().eventBlockDamager(level, pos), 4.0F)) // CraftBukkit - move up
+            if (livingEntity.hurtServer(level, level.damageSources().magic().eventBlockDamager(level, pos), 4.0F)) { // CraftBukkit - move up // EMC - Remove target for cancelled hurt
             level.playSound(
                 null, livingEntity.getX(), livingEntity.getY(), livingEntity.getZ(), SoundEvents.CONDUIT_ATTACK_TARGET, SoundSource.BLOCKS, 1.0F, 1.0F
             );
+            } else { blockEntity.destroyTarget = null; } // EMC - Remove target for cancelled hurt
         }
 
         if (!Objects.equals(entityReference, blockEntity.destroyTarget)) {
@@ -233,6 +_,14 @@
         List<LivingEntity> entitiesOfClass = level.getEntitiesOfClass(
             LivingEntity.class, getDestroyRangeAABB(pos), livingEntity -> livingEntity instanceof Enemy && livingEntity.isInWaterOrRain()
         );
+        // EMC start - ConduitNewTargetEvent
+        List<org.bukkit.entity.LivingEntity> bukkitEntities = Lists.newArrayListWithCapacity(entitiesOfClass.size());
+        for (LivingEntity entity : entitiesOfClass) {
+            bukkitEntities.add(entity.getBukkitLivingEntity());
+        }
+        new com.empireminecraft.empirecraft.event.block.ConduitNewTargetEvent(bukkitEntities, org.bukkit.craftbukkit.block.CraftBlock.at(level, pos)).callEvent();
+        entitiesOfClass.removeIf(entityLiving -> !bukkitEntities.contains(entityLiving.getBukkitLivingEntity()));
+        // EMC end - ConduitNewTargetEvent
         return entitiesOfClass.isEmpty() ? null : new EntityReference<>(Util.getRandom(entitiesOfClass, level.random));
     }
 
