--- a/net/minecraft/world/entity/monster/Ghast.java
+++ b/net/minecraft/world/entity/monster/Ghast.java
@@ -45,6 +_,7 @@
     private static final EntityDataAccessor<Boolean> DATA_IS_CHARGING = SynchedEntityData.defineId(Ghast.class, EntityDataSerializers.BOOLEAN);
     private static final byte DEFAULT_EXPLOSION_POWER = 1;
     private int explosionPower = 1;
+    public int fireballCooldown = 40; // EMC - Ghast API
 
     public Ghast(EntityType<? extends Ghast> entityType, Level level) {
         super(entityType, level);
@@ -381,7 +_,7 @@
                         largeFireball.bukkitYield = largeFireball.explosionPower = this.ghast.getExplosionPower(); // CraftBukkit - set bukkitYield when setting explosionPower
                         largeFireball.setPos(this.ghast.getX() + viewVector.x * 4.0, this.ghast.getY(0.5) + 0.5, largeFireball.getZ() + viewVector.z * 4.0);
                         level.addFreshEntity(largeFireball);
-                        this.chargeTime = -40;
+                        this.chargeTime = -ghast.fireballCooldown; // EMC - Fireball Cooldown
                     }
                 } else if (this.chargeTime > 0) {
                     this.chargeTime--;
@@ -441,7 +_,14 @@
             for (int i = 0; i < 64; i++) {
                 vec31 = chooseRandomPositionWithRestriction(mob, vec3, random);
                 if (vec31 != null && isGoodTarget(level, vec31, distanceToBlocks)) {
-                    return vec31;
+                    // EMC start
+                    var bukkitEntity = mob.getBukkitLivingEntity();
+                    var event = new com.empireminecraft.empirecraft.event.entity.GhastMoveTargetEvent(bukkitEntity, new org.bukkit.Location(bukkitEntity.getWorld(), vec31.x(), vec31.y(), vec31.z()));
+                    if (event.callEvent()) {
+                        var targetLoc = event.getMoveTarget();
+                        return new Vec3(targetLoc.getX(), targetLoc.getY(), targetLoc.getZ());
+                    }
+                    // EMC end
                 }
             }
 
