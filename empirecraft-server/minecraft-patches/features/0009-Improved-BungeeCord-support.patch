From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Mon, 9 Dec 2013 23:21:21 -0500
Subject: [PATCH] Improved BungeeCord support

Secure BungeeCord with IP Whitelist for IP/UUID forwarding
Allow online-mode to be set to true, and skip online-mode for bungee IP's

diff --git a/net/minecraft/network/Connection.java b/net/minecraft/network/Connection.java
index 34524dc5a503bebcec99ada0d9560d6f4df48cdf..f65dd842936f628055a9ae98d95cab74137d9b82 100644
--- a/net/minecraft/network/Connection.java
+++ b/net/minecraft/network/Connection.java
@@ -95,6 +95,7 @@ public class Connection extends SimpleChannelInboundHandler<Packet<?>> {
     // Spigot end
     @Nullable
     private volatile PacketListener disconnectListener;
+    public boolean isProxied = false; // EMC - Adjusted BungeeCord Support
     @Nullable
     private volatile PacketListener packetListener;
     @Nullable
diff --git a/net/minecraft/server/network/ServerHandshakePacketListenerImpl.java b/net/minecraft/server/network/ServerHandshakePacketListenerImpl.java
index 8054aad7f394db8257fc894d92a6993283b8dbd4..7f89eee8b609ffa962427243a5b22fad3077da58 100644
--- a/net/minecraft/server/network/ServerHandshakePacketListenerImpl.java
+++ b/net/minecraft/server/network/ServerHandshakePacketListenerImpl.java
@@ -116,7 +116,8 @@ public class ServerHandshakePacketListenerImpl implements ServerHandshakePacketL
         } else {
             this.connection.setupInboundProtocol(LoginProtocols.SERVERBOUND, new ServerLoginPacketListenerImpl(this.server, this.connection, transferred));
             // Paper start - PlayerHandshakeEvent
-            boolean proxyLogicEnabled = org.spigotmc.SpigotConfig.bungee;
+            String ip = ((java.net.InetSocketAddress) this.connection.getRemoteAddress()).getAddress().getHostAddress(); // EMC - Adjusted BungeeCord Support
+            boolean proxyLogicEnabled = org.spigotmc.SpigotConfig.bungee && org.spigotmc.SpigotConfig.bungeeAddresses.contains(ip); // EMC - Adjusted BungeeCord Support - add bungeeAddresses check
             boolean handledByEvent = false;
             // Try and handle the handshake through the event
             if (com.destroystokyo.paper.event.player.PlayerHandshakeEvent.getHandlerList().getRegisteredListeners().length != 0) { // Hello? Can you hear me?
@@ -152,6 +153,7 @@ public class ServerHandshakePacketListenerImpl implements ServerHandshakePacketL
             String[] split = packet.hostName().split("\00");
             if (!handledByEvent && proxyLogicEnabled) { // Paper
                 // if (org.spigotmc.SpigotConfig.bungee) { // Paper - comment out, we check above!
+                connection.isProxied = true; // EMC - Adjusted BungeeCord Support
                 if ((split.length == 3 || split.length == 4) && (ServerHandshakePacketListenerImpl.BYPASS_HOSTCHECK || ServerHandshakePacketListenerImpl.HOST_PATTERN.matcher(split[1]).matches())) { // Paper - Add bypass host check
                     // Paper start - Unix domain socket support
                     java.net.SocketAddress socketAddress = this.connection.getRemoteAddress();
@@ -159,7 +161,7 @@ public class ServerHandshakePacketListenerImpl implements ServerHandshakePacketL
                     this.connection.address = new java.net.InetSocketAddress(split[1], socketAddress instanceof java.net.InetSocketAddress ? ((java.net.InetSocketAddress) socketAddress).getPort() : 0);
                     // Paper end - Unix domain socket support
                     this.connection.spoofedUUID = com.mojang.util.UndashedUuid.fromStringLenient( split[2] );
-                } else {
+                } else if (false) { // EMC - Adjusted BungeeCord Support
                     Component message = Component.literal("If you wish to use IP forwarding, please enable it in your BungeeCord config as well!");
                     this.connection.send(new ClientboundLoginDisconnectPacket(message));
                     this.connection.disconnect(message);
diff --git a/net/minecraft/server/network/ServerLoginPacketListenerImpl.java b/net/minecraft/server/network/ServerLoginPacketListenerImpl.java
index 390aa1da46e5fca33dcfb9f45aabe22603fe438c..b6aac4e05a2473bb74155a7196724e75d77e26ba 100644
--- a/net/minecraft/server/network/ServerLoginPacketListenerImpl.java
+++ b/net/minecraft/server/network/ServerLoginPacketListenerImpl.java
@@ -182,7 +182,7 @@ public class ServerLoginPacketListenerImpl implements ServerLoginPacketListener,
         if (singleplayerProfile != null && this.requestedUsername.equalsIgnoreCase(singleplayerProfile.getName())) {
             this.startClientVerification(singleplayerProfile);
         } else {
-            if (this.server.usesAuthentication() && !this.connection.isMemoryConnection()) {
+            if (this.server.usesAuthentication() && !this.connection.isMemoryConnection() && !this.connection.isProxied) { // EMC - Adjusted BungeeCord Support - add && !isProxied
                 this.state = ServerLoginPacketListenerImpl.State.KEY;
                 this.connection.send(new ClientboundHelloPacket("", this.server.getKeyPair().getPublic().getEncoded(), this.challenge, true));
             } else {
