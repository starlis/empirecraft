From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Wed, 20 Jun 2018 22:35:39 -0400
Subject: [PATCH] Tweak Explosions


diff --git a/net/minecraft/world/level/ServerExplosion.java b/net/minecraft/world/level/ServerExplosion.java
index c4485f28def66264846a436cfba7bddccb66b82e..9ba18fc6bcee2ad40813d38d3936d42301f6b129 100644
--- a/net/minecraft/world/level/ServerExplosion.java
+++ b/net/minecraft/world/level/ServerExplosion.java
@@ -402,6 +402,7 @@ public class ServerExplosion implements Explosion {
         // calculations in one go
         // additional aggressive caching of block retrieval is very significant, as at low power (i.e tnt) most
         // block retrievals are not unique
+        if (this.fire || this.blockInteraction != Explosion.BlockInteraction.KEEP) { // EMC - don't run block processing if keep flag is set
         for (int ray = 0, len = CACHED_RAYS.length; ray < len;) {
             ca.spottedleaf.moonrise.patches.collisions.ExplosionBlockCache cachedBlock = initialCache;
 
@@ -470,6 +471,7 @@ public class ServerExplosion implements Explosion {
                 currZ += incZ;
             } while (power > 0.0f);
         }
+        } // EMC
 
         return ret;
         // Paper end - collision optimisations
@@ -483,7 +485,7 @@ public class ServerExplosion implements Explosion {
         int floor3 = Mth.floor(this.center.y + f + 1.0);
         int floor4 = Mth.floor(this.center.z - f - 1.0);
         int floor5 = Mth.floor(this.center.z + f + 1.0);
-        List <Entity> list = this.level.getEntities(excludeSourceFromDamage ? this.source : null, new AABB(floor, floor2, floor4, floor1, floor3, floor5), entity -> entity.isAlive() && !entity.isSpectator()); // Paper - Fix lag from explosions processing dead entities, Allow explosions to damage source
+        List <Entity> list = this.level.getEntities(excludeSourceFromDamage ? this.source : null, new AABB(floor, floor2, floor4, floor1, floor3, floor5), entity -> entity.isAlive() && !entity.isSpectator() && !(entity instanceof ItemEntity)); // Paper - Fix lag from explosions processing dead entities, Allow explosions to damage source // EMC - exclude item entities
         for (Entity entity : list) { // Paper - used in loop
             if (!entity.ignoreExplosion(this)) {
                 double d = Math.sqrt(entity.distanceToSqr(this.center)) / f;
