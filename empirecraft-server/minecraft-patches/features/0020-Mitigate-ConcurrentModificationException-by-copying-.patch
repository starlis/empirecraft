From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: chickeneer <emcchickeneer@gmail.com>
Date: Mon, 6 Sep 2021 02:05:16 -0500
Subject: [PATCH] Mitigate ConcurrentModificationException by copying
 entitySection access


diff --git a/net/minecraft/world/level/entity/PersistentEntitySectionManager.java b/net/minecraft/world/level/entity/PersistentEntitySectionManager.java
index 5cf0e48187d14c19e69d8f7686009214dcc06df0..34ba8f1f3c5a72f0387ff41ff001e8dfacfc4551 100644
--- a/net/minecraft/world/level/entity/PersistentEntitySectionManager.java
+++ b/net/minecraft/world/level/entity/PersistentEntitySectionManager.java
@@ -176,17 +176,17 @@ public class PersistentEntitySectionManager<T extends EntityAccess> implements A
             boolean isTicking = visibility1.isTicking();
             boolean isTicking1 = visibility.isTicking();
             if (isTicking && !isTicking1) {
-                entitySection.getEntities().filter(entity -> !entity.isAlwaysTicking()).forEach(this::stopTicking);
+                entitySection.getEntities().filter(entity -> !entity.isAlwaysTicking()).toList().forEach(this::stopTicking); // EMC
             }
 
             if (isAccessible && !isAccessible1) {
-                entitySection.getEntities().filter(entity -> !entity.isAlwaysTicking()).forEach(this::stopTracking);
+                entitySection.getEntities().filter(entity -> !entity.isAlwaysTicking()).toList().forEach(this::stopTracking); // EMC
             } else if (!isAccessible && isAccessible1) {
-                entitySection.getEntities().filter(entity -> !entity.isAlwaysTicking()).forEach(this::startTracking);
+                entitySection.getEntities().filter(entity -> !entity.isAlwaysTicking()).toList().forEach(this::startTracking); // EMC
             }
 
             if (!isTicking && isTicking1) {
-                entitySection.getEntities().filter(entity -> !entity.isAlwaysTicking()).forEach(this::startTicking);
+                entitySection.getEntities().filter(entity -> !entity.isAlwaysTicking()).toList().forEach(this::startTicking); // EMC
             }
         });
     }
