From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Thu, 18 Dec 2014 22:48:46 -0500
Subject: [PATCH] Add BlockBreakNaturally Event

To give reliable control over all blocks dropping to world to restore custom item meta

diff --git a/net/minecraft/server/level/ServerLevel.java b/net/minecraft/server/level/ServerLevel.java
index 4c929cbb72d11c79522928a38dff4369ce161971..e1e3259a38d24ee855ffa22f9d00af50e88ea0aa 100644
--- a/net/minecraft/server/level/ServerLevel.java
+++ b/net/minecraft/server/level/ServerLevel.java
@@ -1525,6 +1525,7 @@ public class ServerLevel extends Level implements ServerEntityGetter, WorldGenLe
             if (entity instanceof net.minecraft.world.entity.item.ItemEntity itemEntity && itemEntity.getItem().isEmpty()) return false; // Paper - Prevent empty items from being added
             // Paper start - capture all item additions to the world
             if (captureDrops != null && entity instanceof net.minecraft.world.entity.item.ItemEntity) {
+                ((net.minecraft.world.entity.item.ItemEntity) entity).droppedPosition = new BlockPos(entity.getBlockX(), entity.getBlockY(), entity.getBlockZ()); // EMC - BlockBreakNaturallyEvent
                 captureDrops.add((net.minecraft.world.entity.item.ItemEntity) entity);
                 return true;
             }
diff --git a/net/minecraft/world/entity/item/ItemEntity.java b/net/minecraft/world/entity/item/ItemEntity.java
index 736933cd63fea858f31f02cde538d0490cdc1300..74bd9cb4033d238374fbaa151f9e3e320a69b3f4 100644
--- a/net/minecraft/world/entity/item/ItemEntity.java
+++ b/net/minecraft/world/entity/item/ItemEntity.java
@@ -41,6 +41,7 @@ public class ItemEntity extends Entity implements TraceableEntity {
     private static final int INFINITE_LIFETIME = -32768;
     public int age;
     public boolean canDespawn = true; // EMC - Item canDespawn API
+    public BlockPos droppedPosition; // EMC - BlockBreakNaturallyEvent
     public int pickupDelay;
     public int health = 5;
     @Nullable
diff --git a/net/minecraft/world/level/block/Block.java b/net/minecraft/world/level/block/Block.java
index 976de81d65b6494cdad20f4ec5125fceec86f951..9b7dffd655f90e481f840300cc07c37d8f5f059c 100644
--- a/net/minecraft/world/level/block/Block.java
+++ b/net/minecraft/world/level/block/Block.java
@@ -339,7 +339,7 @@ public class Block extends BlockBehaviour implements ItemLike {
         double d1 = pos.getX() + 0.5 + Mth.nextDouble(level.random, -0.25, 0.25);
         double d2 = pos.getY() + 0.5 + Mth.nextDouble(level.random, -0.25, 0.25) - d;
         double d3 = pos.getZ() + 0.5 + Mth.nextDouble(level.random, -0.25, 0.25);
-        popResource(level, () -> new ItemEntity(level, d1, d2, d3, stack), stack);
+        popResource(level, () -> new ItemEntity(level, d1, d2, d3, stack), stack, pos); // EMC - BlockBreakNaturallyEvent
     }
 
     public static void popResourceFromFace(Level level, BlockPos pos, Direction direction, ItemStack stack) {
@@ -354,17 +354,19 @@ public class Block extends BlockBehaviour implements ItemLike {
         double d5 = stepX == 0 ? Mth.nextDouble(level.random, -0.1, 0.1) : stepX * 0.1;
         double d6 = stepY == 0 ? Mth.nextDouble(level.random, 0.0, 0.1) : stepY * 0.1 + 0.1;
         double d7 = stepZ == 0 ? Mth.nextDouble(level.random, -0.1, 0.1) : stepZ * 0.1;
-        popResource(level, () -> new ItemEntity(level, d2, d3, d4, stack, d5, d6, d7), stack);
+        popResource(level, () -> new ItemEntity(level, d2, d3, d4, stack, d5, d6, d7), stack, pos); // EMC - BlockBreakNaturallyEvent
     }
 
-    private static void popResource(Level level, Supplier<ItemEntity> itemEntitySupplier, ItemStack stack) {
+    private static void popResource(Level level, Supplier<ItemEntity> itemEntitySupplier, ItemStack stack, BlockPos blockPos) { // EMC - BlockBreakNaturallyEvent
         if (level instanceof ServerLevel serverLevel && !stack.isEmpty() && serverLevel.getGameRules().getBoolean(GameRules.RULE_DOBLOCKDROPS)) {
             ItemEntity itemEntity = itemEntitySupplier.get();
             itemEntity.setDefaultPickUpDelay();
             // CraftBukkit start
             if (level.captureDrops != null) {
+                itemEntity.droppedPosition = blockPos.immutable(); // EMC - BlockBreakNaturallyEvent
                 level.captureDrops.add(itemEntity);
             } else {
+                new com.empireminecraft.empirecraft.event.block.BlockBreakNaturallyEvent(io.papermc.paper.util.MCUtil.toLocation(level, blockPos), (org.bukkit.entity.Item) itemEntity.getBukkitEntity()).callEvent(); // EMC - BlockBreakNaturallyEvent
                 level.addFreshEntity(itemEntity);
             }
             // CraftBukkit end
