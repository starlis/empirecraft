--- /dev/null
+++ b/src/main/java/com/empireminecraft/empirecraft/event/MonsterEggSpawnEvent.java
@@ -1,0 +_,83 @@
+/*
+ * Copyright (c) 2016. Starlis LLC / dba Empire Minecraft
+ *
+ * This source code is proprietary software and must not be redistributed without Starlis LLC's approval
+ *
+ */
+
+package com.empireminecraft.empirecraft.event;
+
+
+import org.bukkit.Location;
+import org.bukkit.entity.Entity;
+import org.bukkit.entity.HumanEntity;
+import org.bukkit.entity.Player;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.Event;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.entity.CreatureSpawnEvent;
+import org.bukkit.inventory.ItemStack;
+import org.jspecify.annotations.NullMarked;
+import org.jspecify.annotations.Nullable;
+
+import java.util.function.Consumer;
+
+@NullMarked
+public class MonsterEggSpawnEvent extends Event implements Cancellable {
+    private static final HandlerList handlers = new HandlerList();
+    private boolean canceled;
+
+    private final @Nullable Player player;
+    private final Location spawnLocation;
+    private final ItemStack item;
+    private final CreatureSpawnEvent.SpawnReason spawnReason;
+    private @Nullable Consumer<Entity> afterSpawn;
+
+    public MonsterEggSpawnEvent(@Nullable HumanEntity player, Location spawnLocation, ItemStack item, CreatureSpawnEvent.SpawnReason spawnReason) {
+        this.player = (Player) player;
+        this.spawnLocation = spawnLocation;
+        this.item = item;
+        this.spawnReason = spawnReason;
+    }
+
+    public @Nullable Player getPlayer() {
+        return player;
+    }
+
+    public Location getSpawnLocation() {
+        return spawnLocation;
+    }
+
+    public CreatureSpawnEvent.SpawnReason getSpawnReason() {
+        return spawnReason;
+    }
+
+    public @Nullable Consumer<Entity> getAfterSpawn() {
+        return afterSpawn;
+    }
+
+    public void setAfterSpawn(@Nullable Consumer<Entity> afterSpawn) {
+        this.afterSpawn = afterSpawn;
+    }
+
+    public ItemStack getItem() {
+        return item;
+    }
+
+    public boolean isCancelled() {
+        return canceled;
+    }
+
+    public void setCancelled(boolean cancel) {
+        canceled = cancel;
+    }
+
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+
+}
